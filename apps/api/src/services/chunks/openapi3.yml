openapi: 3.0.0
info:
  title: ""
  version: 0.0.1
security:
  - bearerAuth: []
servers:
  - url: http://localhost:3030
    description: test server locally
  - url: http://localhost:4010
    description: Prism local server
paths:
  /chunks:
    post:
      summary: Your POST endpoint
      tags: []
      operationId: post-chunks
      responses:
        "201":
          description: a set of chunks
          headers:
            Prefer:
              schema:
                type: string
                description: what prism should use to pick the example
            X-Stream:
              schema:
                type: boolean
                description: If the response should be streamed; defaults to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunk'
              examples:
                example_chunk_post_res_0:
                  $ref: '#/components/examples/example_chunk_post_res_0'
        "400":
          description: Errpr during creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunk'
              examples:
                example_chunk_post_res_0_error:
                  $ref: '#/components/examples/example_chunk_post_res_0_error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chunk'
            examples:
              example_chunk_post_req_0:
                $ref: '#/components/examples/example_chunk_post_req_0'
components:
  examples:
    example_chunk_post_req_0:
      summary: 'Create a chunk'
      value:
        metadata:
          int: 1
          bool: true
          string: this is the text
        pageContent: content
        documentId: 1
        documentIndex: 0
        plugin: "get_current_weather"
    example_chunk_post_res_0:
      summary: 'Chunk created'
      value:
        id: 1
        hash: 040f06fd774092478d450774f5ba30c5da78acc8
        metadata:
          int: 1
          bool: true
          string: this is the text
        pageContent: content
        documentId: 1
        documentIndex: 0
        plugin: get_current_weather
        userId: "1"
    example_chunk_post_res_0_error:
      summary: 'Error - Duplicate pageContent'
      value:
        name: BadRequest
        message: Error resolving data
        code: 400
        className: bad-request
        data:
          embedding:
            name: BadRequest
            message: Hash 040f06fd774092478d450774f5ba30c5da78acc8 is not unique. Document already exists.
            code: 400
            className: bad-request      
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          minimum: 0
        message:
          type: string
        name:
          type: string
        className:
          type: string
    IntegerId:
      type: integer
      readOnly: true
      minimum: 0
      maximum: 100000000
      example: 1
    Uuid:
      type: string
      format: uuid
      example: 74738ff5-5367-5958-9aee-98fffdcd1876
    ObjectId:
      anyOf:
        - type: string
          example: 74738ff5-5367-5958-9aee-98fffdcd1876
        - type: object
          properties: {}
          additionalProperties: false
    ISODate:
      type: string
      format: date-time
      example: "2017-07-21T17:32:28.000Z"
    Chunk:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        hash:
          type: string
          readOnly: true
        metadata:
          type: object
        pageContent:
          type: string
        documentId:
          type: integer
        documentIndex:
          type: integer
        plugin:
          type: string
        userId:
          type: integer
          readOnly: true
        embedding:
          type: string
          readOnly: true
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IntegerId'
        email:
          type: string
        password:
          type: string
