name: Versioning

on:
  push:
    branches:
      - 'develop'
      - 'test'
      - 'production'
      - 'main'
  workflow_dispatch:
  workflow_call: 

jobs:
  determine-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up minimal package.json
        run: |
          echo '{
            "name": "temporary-lib",
            "version": "0.0.0-release-it"
          }' > package.json

      - name: Install dependencies
        run: npm install @release-it/conventional-changelog conventional-changelog-angular

      - name: Get version
        id: get_version
        run: |
          VERSION=$(npx release-it --ci --release-version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Output version
        run: 'echo "Version determined: ${{ env.VERSION }}"'


      # - name: Install Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      #     cache: 'pnpm'
      #     cache-dependency-path: './pnpm-lock.yaml'

      # - name: Get pnpm store directory
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # - uses: actions/cache@v4
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ env.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      # - name: Install dependencies
      #   run: pnpm add @release-it/conventional-changelog conventional-changelog-angular

      # - name: Get version
      #   id: get_version
      #   run: |
      #     VERSION=$(npx release-it --ci --release-version)
      #     echo "VERSION=$VERSION" >> $GITHUB_ENV

      # - name: Output version
      #   run: 'echo "Version determined: ${{ env.VERSION }}"'