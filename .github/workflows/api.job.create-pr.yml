name: "API:Job:CreatePR"

on:
  workflow_call:
    inputs:
        version:
          description: 'The version to deploy'
          required: true
          type: string
  workflow_dispatch:

jobs:
  deploy:
    environment: ${{ github.ref_name == 'main' && 'production' || github.ref_name }}
    env: 
      ENV: ${{ github.ref_name == 'main' && 'production' || github.ref_name }}        
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for rebase

      - name: Set Up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Rebase develop onto test and push
        if: github.ref_name == 'develop' && success()
        run: |
          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/test; then
            git checkout test
          else
            git checkout -b test develop
            git push origin test
          fi
          git pull origin test
          git rebase develop
          git push origin test --force

      - name: Create Pull Request to Test
        if: github.ref_name == 'develop' && success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: develop
          branch: test
          title: 'Deploy ${{ inputs.version }} to Test'
          body: 'This PR is automatically created after a successful deployment from develop to test.'
          delete-branch: true  # Clean up after merge

      - name: Rebase test onto main and push
        if: github.ref_name == 'test' && success()
        run: |
          git checkout main || git checkout -b main origin/main
          git pull origin main
          git rebase test
          git push origin main --force

      - name: Create Pull Request to Main
        if: github.ref_name == 'test' && success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: test
          branch: main
          title: 'Deploy ${{ inputs.version }} to Main'
          body: 'This PR is automatically created after a successful deployment from test to main.'
          delete-branch: true  # Clean up after merge