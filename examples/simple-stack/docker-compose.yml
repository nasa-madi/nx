services:

  ## This is the real API available at port 3030
  ##   - This builds an image for the top level docker-compose
  ##     and may not be the same image as built under the /api folder directly
  api:
    image: "nasamadi/madi-api:latest"
    environment:
      - NODE_ENV=development
      - NODE_CONFIG_ENV=config
    ports:
      - "3030:3030"
    networks:
      - madi
    volumes:
      - ./config.yml:/app/config/config.yml
    depends_on:
      database:
        condition: service_healthy

  ## This is the postgres docker DB available at port 35432
  ##   - This only for local usage and has no bearing on CloudSQL
  ##   - When referencing the db from a compose container, use database:5432
  ##   - When referencing the db from an external process, use localhost:35432
  database:
    image: "ankane/pgvector"
    environment:
      - POSTGRES_USER=unicorn_user
      - POSTGRES_PASSWORD=magical_password
      - POSTGRES_DB=rainbow_database
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - madi
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unicorn_user -d rainbow_database"]
      interval: 5s
      timeout: 5s
      retries: 5

  #-----------------------------
  # NLM PARSER SERVICE
  #-----------------------------
  # This Sping up an NLMParser service with a bundled Apache Tika server instance
  parser-nlm:      
    image: "nasamadi/madi-parsers-nlm:latest"
    ports:
      - 5010:5001
    networks:
      - madi

  #-----------------------------
  # CLOUD STORAGE MOCK SERVICE
  #-----------------------------
  # This mocks out a Google Cloud Storage server so that local testing
  # can be done with a GCS Bucket library.
  storage:
    image: "nasamadi/madi-storage-gcp-emulator:latest"
    environment:
      - PORT=9023
      - STORAGE_BASE=./api
      - STORAGE_DIR=./uploads
    ports:
      - "9023:9023"
    volumes:
      - ./uploads:/storage
    networks:
      - madi
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9023 | grep 'OK' || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 5

  #-----------------------------
  # WEB UI SERVICE
  #-----------------------------
  # This is the UI service that is typically deployed at the root
  # of the domain for this project. In the cloud, this should be served 
  # by a static proxy.
  interface-web:
    image: "nasamadi/madi-interfaces-web:latest"
    ports:
      - "3000:3000"
    networks:
      - madi

networks:
  madi:

volumes:
  database-data: